#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX_GOUSMAS 2
#define FURIA_MAX 5

typedef struct {
    int furia;
    int ativa;
} Gousma;

typedef struct {
    Gousma gousmas[MAX_GOUSMAS];
} Jogador;

void inicializar_jogador(Jogador *jogador) {
    for (int i = 0; i < MAX_GOUSMAS; i++) {
        jogador->gousmas[i].furia = 1;
        jogador->gousmas[i].ativa = 1;
    }
}

void mostrar_estado(Jogador jogador1, Jogador jogador2) {
    printf("\nEstado Atual:\n");
    printf("Jogador 1: ");
    for (int i = 0; i < MAX_GOUSMAS; i++) {
        if (jogador1.gousmas[i].ativa)
            printf("[Gousma %d: Furia %d] ", i + 1, jogador1.gousmas[i].furia);
    }
    printf("\nJogador 2: ");
    for (int i = 0; i < MAX_GOUSMAS; i++) {
        if (jogador2.gousmas[i].ativa)
            printf("[Gousma %d: Furia %d] ", i + 1, jogador2.gousmas[i].furia);
    }
    printf("\n\n");
}

void atacar(Jogador *atacante, Jogador *defensor, int id_atacante, int id_defensor) {
    if (!atacante->gousmas[id_atacante].ativa || !defensor->gousmas[id_defensor].ativa) {
        printf("Ataque inválido!\n");
        return;
    }
    
    defensor->gousmas[id_defensor].furia += atacante->gousmas[id_atacante].furia;
    atacante->gousmas[id_atacante].furia = 0;
    atacante->gousmas[id_atacante].ativa = 0;
    printf("Ataque realizado!\n");
    
    if (defensor->gousmas[id_defensor].furia > FURIA_MAX) {
        defensor->gousmas[id_defensor].ativa = 0;
        printf("Gousma %d do defensor se desintegrou!\n", id_defensor + 1);
    }
}

void dividir(Gousma *gousma1, Gousma *gousma2) {
    if (gousma1->furia > 1 && !gousma2->ativa) {
        gousma2->furia = gousma1->furia / 2;
        gousma1->furia -= gousma2->furia;
        gousma2->ativa = 1;
        printf("Gousma dividida com sucesso!\n");
    } else {
        printf("Divisão impossível!\n");
    }
}

int verificar_derrota(Jogador jogador) {
    return !(jogador.gousmas[0].ativa || jogador.gousmas[1].ativa);
}

void jogar() {
    Jogador jogador1, jogador2;
    inicializar_jogador(&jogador1);
    inicializar_jogador(&jogador2);
    
    int turno = 1;
    while (1) {
        mostrar_estado(jogador1, jogador2);
        
        printf("Turno do Jogador %d. Escolha uma ação:\n", turno);
        printf("1 - Atacar\n2 - Dividir Gousma\n");
        int opcao, id_atacante, id_defensor;
        scanf("%d", &opcao);
        
        if (opcao == 1) {
            printf("Escolha sua Gousma (1 ou 2): ");
            scanf("%d", &id_atacante);
            printf("Escolha a Gousma do oponente para atacar (1 ou 2): ");
            scanf("%d", &id_defensor);
            atacar(turno == 1 ? &jogador1 : &jogador2, turno == 1 ? &jogador2 : &jogador1, id_atacante - 1, id_defensor - 1);
        } else if (opcao == 2) {
            dividir(&((turno == 1 ? &jogador1 : &jogador2)->gousmas[0]), &((turno == 1 ? &jogador1 : &jogador2)->gousmas[1]));
        }
        
        if (verificar_derrota(jogador1)) {
            printf("Jogador 2 venceu!\n");
            break;
        }
        if (verificar_derrota(jogador2)) {
            printf("Jogador 1 venceu!\n");
            break;
        }
        
        turno = (turno == 1) ? 2 : 1;
    }
}

int main() {
    int opcao;
    while (1) {
        printf("\nGousmas War - Menu Principal\n");
        printf("1 - Jogar\n2 - Sair\n");
        scanf("%d", &opcao);
        if (opcao == 1) {
            jogar();
        } else {
            break;
        }
    }
    return 0;
}
