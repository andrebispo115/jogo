#include <stdio.h>
#include <stdlib.h>

#define MAX_GOUSMAS 2  
#define FURIA_MAX 5    

int main() {
    int gousmas_jogador1[MAX_GOUSMAS] = {1, 1};
    int gousmas_jogador2[MAX_GOUSMAS] = {1, 1};
    
    int turno = 1;
    int opcao, id_origem, id_destino;
    
    while (1) {
        printf("\nEstado Atual:\n");
        printf("Jogador 1: ");
        for (int i = 0; i < MAX_GOUSMAS; i++) {
            printf("[Gousma %d: %s Furia %d] ", i + 1, gousmas_jogador1[i] > 0 ? "Ativa" : "Morta", gousmas_jogador1[i]);
        }
        printf("\nJogador 2: ");
        for (int i = 0; i < MAX_GOUSMAS; i++) {
            printf("[Gousma %d: %s Furia %d] ", i + 1, gousmas_jogador2[i] > 0 ? "Ativa" : "Morta", gousmas_jogador2[i]);
        }
        printf("\n\n");

        printf("Turno do Jogador %d. Escolha uma acao:\n", turno);
        printf("1 - Atacar\n2 - Transferir Furia\n3 - Sair\n");
        
        if (scanf("%d", &opcao) != 1) {
            printf("Entrada invalida!\n");
            while (getchar() != '\n'); 
            continue;
        }
        
        if (opcao == 1) {
            printf("Escolha sua Gousma (1 ou 2): ");
            if (scanf("%d", &id_origem) != 1 || id_origem < 1 || id_origem > MAX_GOUSMAS) {
                printf("Entrada invalida!\n");
                while (getchar() != '\n');
                continue;
            }
            printf("Escolha a Gousma do oponente para atacar (1 ou 2): ");
            if (scanf("%d", &id_destino) != 1 || id_destino < 1 || id_destino > MAX_GOUSMAS) {
                printf("Entrada invalida!\n");
                while (getchar() != '\n');
                continue;
            }

            if (turno == 1) {
                if (gousmas_jogador1[id_origem - 1] <= 0 || gousmas_jogador2[id_destino - 1] <= 0) {
                    printf("Ataque invalido!\n");
                    continue;
                }
                gousmas_jogador2[id_destino - 1] += gousmas_jogador1[id_origem - 1];
                printf("Ataque realizado!\n");
                if (gousmas_jogador2[id_destino - 1] > FURIA_MAX) {
                    gousmas_jogador2[id_destino - 1] = 0;
                    printf("Gousma %d do Jogador 2 morreu!\n", id_destino);
                }
            } else {
                if (gousmas_jogador2[id_origem - 1] <= 0 || gousmas_jogador1[id_destino - 1] <= 0) {
                    printf("Ataque invalido!\n");
                    continue;
                }
                gousmas_jogador1[id_destino - 1] += gousmas_jogador2[id_origem - 1];
                printf("Ataque realizado!\n");
                if (gousmas_jogador1[id_destino - 1] > FURIA_MAX) {
                    gousmas_jogador1[id_destino - 1] = 0;
                    printf("Gousma %d do Jogador 1 morreu!\n", id_destino);
                }
            }

        } else if (opcao == 2) {
            printf("Escolha a Gousma de origem (1 ou 2): ");
            if (scanf("%d", &id_origem) != 1 || id_origem < 1 || id_origem > MAX_GOUSMAS) {
                printf("Entrada invalida!\n");
                while (getchar() != '\n');
                continue;
            }
            printf("Escolha a Gousma de destino (1 ou 2): ");
            if (scanf("%d", &id_destino) != 1 || id_destino < 1 || id_destino > MAX_GOUSMAS || id_origem == id_destino) {
                printf("Entrada invalida!\n");
                while (getchar() != '\n');
                continue;
            }

            int *jogador_atual = (turno == 1) ? gousmas_jogador1 : gousmas_jogador2;
            
            if (jogador_atual[id_origem - 1] <= 0) {
                printf("Transferencia impossivel!\n");
                continue;
            }

            int quantidade;
            printf("Digite a quantidade de furia para transferir: ");
            if (scanf("%d", &quantidade) != 1 || quantidade <= 0 || quantidade > jogador_atual[id_origem - 1]) {
                printf("Quantidade invalida!\n");
                while (getchar() != '\n');
                continue;
            }

            jogador_atual[id_origem - 1] -= quantidade;
            jogador_atual[id_destino - 1] += quantidade;
            printf("Transferencia realizada com sucesso!\n");

        } else if (opcao == 3) {
            printf("Jogo encerrado!\n");
            break;
        }
        
        if ((gousmas_jogador1[0] == 0 && gousmas_jogador1[1] == 0)) {
            printf("Jogador 2 venceu!\n");
            break;
        }
        if ((gousmas_jogador2[0] == 0 && gousmas_jogador2[1] == 0)) {
            printf("Jogador 1 venceu!\n");
            break;
        }
        
        turno = (turno == 1) ? 2 : 1;
    }
    
    return 0;
}
